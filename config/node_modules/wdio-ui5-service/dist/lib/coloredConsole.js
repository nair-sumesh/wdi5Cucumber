"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
exports.__esModule = true;
exports.chalk = exports.colored = void 0;
var translate = function (color) {
    switch (color) {
        case "red":
            return "31";
        case "green":
            return "32";
        case "yellow":
            return "33";
        case "blue":
            return "34";
        case "magenta":
            return "35";
        case "cyan":
            return "36";
        case "default":
            return "0";
        default:
            return "32"; // all is good
    }
};
var colored = function (color) {
    return function (msg) {
        var other = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            other[_i - 1] = arguments[_i];
        }
        return typeof msg === "string"
            ? console.log.apply(console, __spreadArray(["\u001B[".concat(translate(color), "m%s\u001B[0m"), msg], __read(other), false)) : console.log.apply(console, __spreadArray([msg], __read(other), false));
    };
};
exports.colored = colored;
var _ = {
    red: (0, exports.colored)("red"),
    green: (0, exports.colored)("green"),
    yellow: (0, exports.colored)("yellow"),
    blue: (0, exports.colored)("blue"),
    magenta: (0, exports.colored)("magenta"),
    cyan: (0, exports.colored)("cyan"),
    "default": (0, exports.colored)("default")
};
exports.chalk = Object.assign(console, __assign({}, _));
//# sourceMappingURL=coloredConsole.js.map